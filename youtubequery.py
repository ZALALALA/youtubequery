# -*- coding: utf-8 -*-
"""YoutubeQuery.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1auaRd9FztsHtLAb8LAHU75TBeyBmBYsO
"""

!pip install youtube_transcript_api
!pip install langchain
!pip install streamlit
!pip install chromadb

!pip install openai

from langchain.document_loaders import YoutubeLoader
from langchain import OpenAI
from langchain.text_splitter import CharacterTextSplitter
from langchain.embeddings import OpenAIEmbeddings
from langchain.chains import RetrievalQA
from langchain.vectorstores import Chroma
import streamlit as st
import os

# Commented out IPython magic to ensure Python compatibility.
# %env OPENAI_API_KEY='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'

api_key = os.getenv('OPENAI_API_KEY')

# Display the Page Title
st.title(' Youtube QnA')

llm = OpenAI(temperature=0)  # Temp controls the randomness of the text

prompt = st.text_input("Paste the URL")

if prompt:
    loader = YoutubeLoader.from_youtube_url(prompt, add_video_info=False)
    docs = loader.load()

    text_splitter = CharacterTextSplitter(chunk_size=1000, chunk_overlap=0)

    split_docs = text_splitter.split_documents(docs)

    embeddings = OpenAIEmbeddings(openai_api_key= apikey)
    doc_search = Chroma.from_documents(docs,embeddings)
    chain = RetrievalQA.from_chain_type(llm=llm,chain_type="stuff",retriever=doc_search.as_retriever())

    query = st.text_input("Enter a query:")

    if st.button("Execute"):
        answer = chain.run(query)
        st.write("Answer:")
        st.write(answer)